name: Enhanced CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FORCE_COLOR: 1

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        pip install yamllint
        
    - name: Run ShellCheck
      run: |
        shellcheck scripts/*.sh install.sh uninstall.sh release.sh || true
        
    - name: Run yamllint
      run: |
        yamllint -c .yamllint.yml .github/workflows/*.yml || true

  unit-tests:
    name: Unit Tests
    runs-on: macos-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        brew install fswatch bats-core shfmt
        
    - name: Run test suite
      run: |
        ./test.sh || true
        
    - name: Upload unit test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: unit-test-results
        path: /tmp/chezmoi-sync-test/logs/
        
  validation:
    name: Script Validation
    runs-on: macos-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        brew install fswatch shellcheck shfmt
        
    - name: Validate script syntax
      run: |
        # Check script syntax
        bash -n scripts/chezmoi-push.sh
        bash -n scripts/chezmoi-pull.sh
        bash -n scripts/chezmoi-resolve.sh
        bash -n install.sh
        bash -n uninstall.sh
        bash -n release.sh
        
    - name: Check script permissions
      run: |
        test -x scripts/chezmoi-push.sh
        test -x scripts/chezmoi-pull.sh
        test -x scripts/chezmoi-resolve.sh
        test -x install.sh
        test -x uninstall.sh
        test -x release.sh
        
    - name: Validate plist files
      run: |
        plutil -lint plists/com.chezmoi.autopush.plist
        plutil -lint plists/com.chezmoi.autopull.plist
        
    - name: Run shellcheck (strict)
      run: |
        shellcheck -S error scripts/*.sh
        shellcheck -S error install.sh
        shellcheck -S error uninstall.sh
        shellcheck -S error release.sh
        
    - name: Check shell formatting
      run: |
        # Use -i 0 to expect tabs (as per .editorconfig)
        shfmt -i 0 -d scripts/*.sh install.sh uninstall.sh release.sh || true
        
    - name: Test installer (dry run)
      run: |
        # Create mock chezmoi environment
        mkdir -p ~/.local/share/chezmoi
        cd ~/.local/share/chezmoi
        git init --initial-branch=main
        git config user.email "test@example.com"
        git config user.name "Test User"
        echo "test" > test.txt
        git add test.txt
        git commit -m "Initial commit"
        
        # Test installer validation
        bash -n install.sh
        
    - name: Check version consistency
      run: |
        if [ -f VERSION ]; then
          version=$(cat VERSION)
          echo "Version: $version"
          # Validate semver format
          if ! echo "$version" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "ERROR: Version must follow semver format (x.y.z)"
            exit 1
          fi
        fi

  security-scan:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        # Check for potential security issues
        echo "Checking for hardcoded credentials..."
        if grep -r "password\|secret\|key" --include="*.sh" . | grep -v "README.md" | grep -v ".git"; then
          echo "WARNING: Potential credentials found"
        fi
        
        echo "Checking for unsafe commands..."
        if grep -r "rm -rf \/" --include="*.sh" .; then
          echo "ERROR: Unsafe rm command found"
          exit 1
        fi
        
        echo "Checking for eval usage..."
        if grep -r "eval" --include="*.sh" .; then
          echo "WARNING: eval usage found - review carefully"
        fi

  lint:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Lint markdown files
      run: |
        brew install markdownlint-cli
        markdownlint README.md CHANGELOG.md || true
        
    - name: Check file structure
      run: |
        # Ensure required files exist
        test -f README.md
        test -f install.sh
        test -f uninstall.sh
        test -d scripts
        test -d plists
        test -d config
        
        # Check for required scripts
        test -f scripts/chezmoi-push.sh
        test -f scripts/chezmoi-pull.sh
        test -f scripts/chezmoi-resolve.sh
        
        # Check for required plist files
        test -f plists/com.chezmoi.autopush.plist
        test -f plists/com.chezmoi.autopull.plist